
# Code: Find Two Largest Numbers in a Sequence

## Description
This program identifies the two largest distinct numbers in a sequence of integers. It takes as input the number of elements in the sequence and the sequence itself, and outputs the two largest numbers in descending order.

## How It Works
1. The program reads:
   - `n`: the number of elements in the sequence.
   - The first two numbers to initialize the largest (`b`) and second largest (`a`).
2. For the remaining numbers in the sequence:
   - If the number is greater than or equal to the largest (`b`), update the second largest (`a`) to the previous largest, and update the largest (`b`) to the current number.
   - If the number is greater than or equal to the second largest (`a`) but less than the largest (`b`), update the second largest (`a`).
3. The program outputs the two largest numbers in descending order.

## Example Usage
### Input:
```
5
1 3 5 2 4
```
### Output:
```
5 4
```

### Input:
```
4
7 2 7 3
```
### Output:
```
7 7
```

## File Information
- **Filename**: `max_two_numbers.cpp`
- **Language**: C++
- **Dependencies**: Standard C++ library (`iostream`).

## Instructions for Running the Code
1. Compile the program using a C++ compiler, such as `g++`:
   ```bash
   g++ -o max_two_numbers max_two_numbers.cpp
   ```
2. Run the compiled program:
   ```bash
   ./max_two_numbers
   ```
3. Enter the inputs:
   - First, the number of elements (`n`).
   - Then, enter the sequence of `n` integers.
4. Observe the result, which will display the two largest numbers in descending order.
