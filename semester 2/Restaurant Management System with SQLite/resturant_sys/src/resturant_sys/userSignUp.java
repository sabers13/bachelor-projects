/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package resturant_sys;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author Saber
 */
public class userSignUp extends javax.swing.JFrame {

    /**
     * Creates new form userSignUp
     */
    public userSignUp() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        clientUsernameLabel = new javax.swing.JLabel();
        clientUsernameField = new javax.swing.JTextField();
        clientPasswordField = new javax.swing.JPasswordField();
        clientPasswordLabel = new javax.swing.JLabel();
        clientnumberLabel = new javax.swing.JLabel();
        clientPhoneNumberField = new javax.swing.JTextField();
        clientAddressLabel = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        signUpClientButton = new javax.swing.JButton();
        clientAddressField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        clientUsernameLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        clientUsernameLabel.setText("Username");

        clientUsernameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientUsernameFieldActionPerformed(evt);
            }
        });

        clientPasswordLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        clientPasswordLabel.setText("Password");

        clientnumberLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        clientnumberLabel.setText("Phone number");

        clientPhoneNumberField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientPhoneNumberFieldActionPerformed(evt);
            }
        });

        clientAddressLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        clientAddressLabel.setText("Address");
        clientAddressLabel.setToolTipText("");

        backButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        signUpClientButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        signUpClientButton.setText("Sign up");
        signUpClientButton.setToolTipText("");
        signUpClientButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signUpClientButtonActionPerformed(evt);
            }
        });

        clientAddressField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientAddressFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(clientAddressLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(clientnumberLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(clientPhoneNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 134, Short.MAX_VALUE))
                            .addComponent(clientAddressField)))
                    .addComponent(clientUsernameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(clientPasswordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(clientUsernameField, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(clientPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(signUpClientButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(clientUsernameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(clientUsernameField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clientPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clientPasswordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clientnumberLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clientPhoneNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clientAddressLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clientAddressField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(signUpClientButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void clientUsernameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clientUsernameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_clientUsernameFieldActionPerformed

    private void clientPhoneNumberFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clientPhoneNumberFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_clientPhoneNumberFieldActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        firstMenu backToFirstMenu = new firstMenu();
        backToFirstMenu.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_backButtonActionPerformed

    private void signUpClientButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signUpClientButtonActionPerformed

        if (nullCheck() && phoneNumberCheck() && usernameCheck()) {
            JOptionPane.showMessageDialog(null, "Sing up successfully");
            insertDataToDB();
            firstMenu backToFirstMenu = new firstMenu();
            backToFirstMenu.setVisible(true);
            this.setVisible(false);
        } else {
            if (!nullCheck()) {
                JOptionPane.showMessageDialog(null, "Fill all feilds!");
            }
            if (!phoneNumberCheck()) {
                JOptionPane.showMessageDialog(null, "your phone number is not valid!");
            }
            if (!usernameCheck()) {
                JOptionPane.showMessageDialog(null, "Username is already taken!");
            }

            clientUsernameField.setText(null);
            clientPasswordField.setText(null);
            clientPhoneNumberField.setText(null);
            clientAddressField.setText(null);
        }
    }//GEN-LAST:event_signUpClientButtonActionPerformed

    private void clientAddressFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clientAddressFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_clientAddressFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(userSignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(userSignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(userSignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(userSignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new userSignUp().setVisible(true);
            }
        });
    }

    public boolean nullCheck() {
        if (clientUsernameField.getText().length() == 0 || clientPasswordField.getText().length() == 0
                || clientPhoneNumberField.getText().length() == 0 || clientAddressField.getText().length() == 0) {
            return false;
        } else {
            return true;
        }

    }

    public boolean usernameCheck() {
        boolean flag = false;
        try {
            Connection conn = database.connectClientdb();
            String a = "Select *from client where username='" + clientUsernameField.getText() + "'";

            Statement stm = conn.createStatement();
            ResultSet rs = stm.executeQuery(a);
            if (rs.next()) {

                flag = false;

            } else {
                flag = true;
            }

            conn.close();

        } catch (SQLException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
            //flag= true;
        }
        return flag;

    }

    public boolean phoneNumberCheck() {

        Pattern p = Pattern.compile("(0)?(9)?[0-9]{10}");
        Matcher m = p.matcher(clientPhoneNumberField.getText());
        if (m.find() && m.group().equals(clientPhoneNumberField.getText())) {
            return true;
        } else {
            return false;
        }

    }

    public void insertDataToDB() {
        try {
            Connection conn = database.connectClientdb();
            String a = "INSERT INTO client(username,password)VALUES(?,?)";
            PreparedStatement pst = conn.prepareStatement(a);
            pst.setString(1, clientUsernameField.getText());
            pst.setString(2, clientPasswordField.getText());
            pst.execute();

            conn.close();

        } catch (SQLException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
            //flag= true;
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JTextField clientAddressField;
    private javax.swing.JLabel clientAddressLabel;
    private javax.swing.JPasswordField clientPasswordField;
    private javax.swing.JLabel clientPasswordLabel;
    private javax.swing.JTextField clientPhoneNumberField;
    private javax.swing.JTextField clientUsernameField;
    private javax.swing.JLabel clientUsernameLabel;
    private javax.swing.JLabel clientnumberLabel;
    private javax.swing.JButton signUpClientButton;
    // End of variables declaration//GEN-END:variables
}
